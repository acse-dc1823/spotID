import os

set_to_delete = {'0_1_BR-220B-2019-11-23_03-48-16_Left_individual', '0_0_MM-140A-2019-12-22_23-43-38_Right_individual', '0_1_BG-202B-2019-03-16_22-59-23_Left_individual', '0_1_BG-05A-2020-08-29_10-31-30_right_individual', '0_1_MM-88A-2016-04-16_22-55-55_Left_individual', '0_1_CU-380A-2016-03-07_22-25-59_Left_individual', '0_1_BG-102B-2019-02-28_03-51-27_Front_Individual', '0_0_CU-267B-2014-03-02_08-11-25_Right_individual', '0_0_153A-2013-12-14_00-35-46_Right_individual', '0_1_CU-337A-2020-06-11_04-58-51_Right_individual', '0_2_NDB-52A-2019-07-05_11-20-30_Front_individual', '0_1_MM-254A-2020-01-21_05-32-07_Right_individual', '0_0_MM-263B-2016-05-16_17-49-14_Right_individual',
                 '0_0_MM-265A-2020-01-10_16-47-52_Right_individual', '0_0_CU-337A-2020-06-11_04-58-51_Right_individual', '0_1_MM-263A-2016-05-16_17-49-22_Left_individual', '0_1_CU-205A-2020-04-26_05-58-27', '0_1_CU-181B-2014-02-06_21-33-39_Left_individual', '0_1_BG-201B-2019-03-30_20-12-59_Left_Individual', '0_0_CU-268A-2014-03-01_21-55-40_Left_individual', '0_0_CU-181A-2014-02-06_21-30-30_Left_individual', '0_1_MM-219A-2014-12-21_18-20-45_Left_Individual', '0_1_HBR-13_collected_on_16-Feb-20_Right_individual', '0_0_BR-166B-2019-11-02_09-42-00_Left_individual', '0_1_BG-165B-2019-03-18_01-06-11_Right_individual', '0_0_DD-04B-2015-03-03_01-31-35_Right individual', '0_0_104A-2013-11-21_16-10-53_Right_individual',
                 '0_0_BR-166A-2019-11-02_09-41-42_Right_individual', '0_1_MM-265A-2020-01-10_16-47-52_Right_individual', '0_1_DD-04B-2015-03-03_01-31-35_Left individual', '0_1_22B-2013-12-11_02-27-54_Right_individual', '0_1_BR-165B-2019-10-30_07-26-04_Left_individual', '0_0_BG-200B-2019-03-30_20-40-20_Right_Individual', '0_1_CU-267B-2014-03-02_08-11-25_Left_individual', '0_0_CU-268B-2014-03-01_21-55-35_Right_individual', '0_1_75B-2013-12-03_18-32-10_Right_individual', '0_1_MM-260B-2016-05-21_23-59-52_Right_individual', '0_0_75B-2013-12-03_18-32-10_Right_individual', '0_0_BR-190A-2018-02-26_08-25-05_Right_Individual', '0_1_MM-331A-2018-07-01_10-28-06_Left_individual', '0_1_BG-200B-2019-03-30_20-40-20_Left_Individual', 
                 '0_0_NDB-52A-2019-07-05_11-20-30_Right_individual', '0_1_CU-181B-2014-02-06_21-33-39 _Right_individual', '0_1_NDB-52B-2019-07-05_11-20-32_Middle_individual', '0_0_MM-140A-2019-12-22_23-43-38_Left_individual', '0_1_MM-219B-2014-12-21_18-20-53_Left_individual', '0_1_MM-337A-2020-02-02_09-12-35_Right_individual', '0_2_NDB-52B-2019-07-05_11-20-32_Middle_individual', '0_1_CU-267A-2014-03-02_08-11-25_Right_individual', '0_1_CU-451A-2018-12-05_03-52-05_Right_individual', '0_1_104B-2013-11-21_16-07-50_Right_individual', '0_1_BR-215A-2018-03-11_19-25-43_Right_Individual', '0_0_MM-125A-2018-06-01_21-55-38_Right_back_individual', '0_1_CU-98A-2020-04-15_05-38-20_Left_individual', '0_1_MM-281B-2020-01-24_20-15-56_Front_individual',
                 '0_0_MM-219B-2014-12-21_18-20-53_Right_individual', '0_1_22B-2013-12-11_02-27-54_Left_individual', '0_0_CU-380A-2016-03-09_05-23-06_Left_individual', '0_2_MM-125A-2018-06-01_21-55-38Right_front_individual', '0_1_MM-332B-2020-02-03_20-37-27_Left_individual', '0_1_DD-42B-2015-03-08_02-03-27_Left individual', '0_1_104A-2013-11-21_16-10-53_Left_individual', '0_0_104B-2013-11-21_16-07-50_Left_individual', '0_1_MM-154B-2019-12-24_18-43-11_Left_individual', '0_1_BG-170B-2019-03-26_18-52-03', '0_1_KB-34A-2015-11-06_20-42-13_Left individual', '0_0_BR-220B-2019-11-23_03-48-16_Left_individual', '0_1_CU-18B-2018-08-14_00-38-56_Left individual', '0_1_MM-125A-2018-06-01_21-55-38Right_front_individual', '0_1_CU-14A-2020-03-13_05-25-31_Front_individual', '0_0_BR-210B-2018-03-11_20-06-57_Right_Individual', '0_1_BR-190A-2018-02-26_08-25-05_Right_Individual', '0_0_BR-190A-2018-02-26_08-25-05_Left_Individual', '0_0_BR-166A-2019-11-02_09-41-50_Middle_individual', '0_0_MM-265A-2020-01-10_16-48-02_Left_individual', '0_1_75B-2013-12-03_18-32-10_Left_individual', '0_0_CU-181B-2014-02-06_21-33-39 _Right_individual', '0_1_NDB-52B-2019-07-05_11-20-47_Back_individual', '0_1_BR-166B-2019-11-02_09-42-00_Left_individual', '0_0_CU-216B-2014-02-12_03-06-02_Left_individual', '0_1_MM-140A-2019-12-22_23-43-38_Left_individual', '0_1_BR-220B-2019-11-23_03-48-16_Right_individual', '0_0_BG-201B-2019-03-30_20-12-59_Left_Individual', '0_1_CU-267B-2014-03-02_08-11-26_Left_individual', '0_0_22B-2013-12-11_02-27-54_Left_individual', '0_1_MM-265A-2020-01-10_16-48-02_Right_individual', '0_1_CU-216B-2014-02-12_03-06-02_Left_individual', '0_1_CU-306A-2018-10-15_18-29-24_Left_individual', '0_1_CU-337A-2020-06-11_04-58-51_Left_individual', '0_0_MM-219A-2014-12-21_18-20-45_Right_individual', '0_1_BG-102A-2019-02-28_03-51-23_Front_Individual', '0_0_FD-31_Collected_on_19-Apr-20_Right_individual', '0_0_MM-254B-2020-01-21_05-31-53_Right_individual', '0_1_CU-267B-2014-03-02_08-11-26_Right_individual', '0_1_153A-2013-12-14_00-35-46_Left_individual', '0_0_MM-154B-2019-12-24_18-43-11_Right_individual', '0_0_BR-166B-2019-11-02_09-42-00_Right_individual', '0_0_BG-202B-2019-03-16_22-59-23_Left_individual', '0_0_MM-125A-2018-06-01_21-55-38Right_front_individual', '0_1_CU-268B-2014-03-01_21-55-35_Left_individual', '0_1_CU-451A-2018-12-05_03-52-05_Left_individual', '0_1_BG-201B-2019-03-30_20-12-59_Right_Individual', '0_0_MM-88A-2016-04-16_22-55-55_Left_individual', '0_0_DD48-A-2016-12-11_20-55-09_Left_individual', '0_0_CU-14A-2020-03-13_05-25-31_Back_individual', '0_2_MM-125A-2018-06-01_21-55-38_Right_back_individual', '0_0_MM-190B-2019-12-27_21-07-42_Right_individual', '0_1_BR-166A-2019-11-02_09-41-50_Left_individual', '0_0_DD48-A-2016-12-11_20-54-50_Left_individual', '0_1_MM-190B-2019-12-27_21-07-42_Right_individual', '0_1_MM-211A-2014-12-25_07-08-58_Right_individual', '0_1_HBR-16_collected_on_24-Feb-20_Front_individual', '0_1_CU-343B-2014-02-27_03-29-09_Right_individual', '0_1_MM-186A-2019-12-24_23-22-09_Left_individual', '0_1_CU-216B-2014-02-12_03-06-02_Right_individual', '0_1_BR-210B-2018-03-11_20-06-57_Left_Individual', '0_2_BG-165B-2019-03-18_01-06-11_Middle_Individual', '0_0_CU-18B-2018-08-14_00-38-56_Right individual', '0_0_MM-154A-2019-12-24_18-43-33_Back_individual', '0_1_CU-306A-2018-10-15_18-30-59_Left_individual', '0_1_MM-206B-2016-05-09_08-03-54_Left_individual', '0_1_CU-267B-2014-03-01_22-55-52_Right_individual', '0_1_MM-190B-2019-12-27_08-23-55_Right_individual', '0_0_BG-102B-2019-02-28_03-51-27_Front_Individual', '0_2_BG-165B-2019-03-18_01-06-11_Right_individual', '0_2_NDB-52A-2019-07-05_11-20-30_Right_individual', '0_1_MM-125A-2018-06-01_21-55-38_Right_back_individual', '0_1_MM-140A-2019-12-22_23-43-38_Right_individual', '0_0_NDB-52A-2019-07-05_11-20-30_Front_individual', '0_1_MM-337B-2020-02-02_09-12-34_Left_individual', '0_1_BG-102B-2019-02-28_03-51-27_Back_Individual', '0_0_DD-18A-2015-03-13_06-40-06_Left individual', '0_1_CU-181A-2014-02-06_21-30-30_Right_individual', '0_0_BG-165B-2019-03-18_01-06-11_Middle_Individual', '0_1_MM-88A-2016-04-16_22-55-55_Right_individual', '0_1_DD48-A-2016-12-11_20-55-09_Left_individual', '0_1_BG-202B-2019-03-16_22-59-23_Right_Individual', '0_1_FD-31_Collected_on_19-Apr-20_Right_individual', '0_1_DD-15B-2015-03-12_18-30-58', '0_1_BR-190A-2018-02-26_08-25-05_Left_Individual', 
                 '0_0_CU-451A-2018-12-05_03-52-05_Right_individual', '0_1_DD-42B-2015-03-08_02-03-27_Right individual', '0_2_CU-268A-2014-03-01_21-55-40_Left_individual', '0_0_HBR-13_collected_on_16-Feb-20_Left_individual', '0_1_CU-103B-2018-09-06_07-34-26', '0_0_MM-254A-2020-01-21_05-32-07_Right_individual', '0_0_DD-42B-2015-03-08_02-03-27_Right individual', '0_1_DD-18A-2015-03-13_06-40-06_Left individual', '0_1_NDB-52A-2019-07-05_11-20-30_Right_individual', '0_0_CU-267B-2014-03-02_08-11-26_Right_individual', '0_1_NG-09A-2015-06-14_02-12-10_Left individual', '0_0_KB-34A-2015-11-06_20-42-13_Right_individual'}

def delete_matching_images(target_directory, filenames):
    """Delete images from target_directory that are in the filenames set."""
    for root, dirs, files in os.walk(target_directory):
        # Iterate over all files in the directory and subdirectories
        for file in files:
            name_without_extension = file.split('.')[0]
            if name_without_extension in filenames:
                os.remove(os.path.join(root, file))
                filenames.remove(name_without_extension)
                print(f"Deleted {file} from {root}")
                # Break early if all filenames are found
                if not filenames:
                    return

# Directory where you want to delete matching images
target_directory = '../../data/train_dataset_bg_rem'

# Delete matching images in the target directory
delete_matching_images(target_directory, set_to_delete)
